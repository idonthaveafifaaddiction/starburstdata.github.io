==============================
Starburst PostgreSQL Connector
==============================

The Starburst PostgreSQL Connector is an extended version of the
:doc:`/connector/postgresql` with configuration and usage identical.

The following improvements are included: 

.. contents::
  :local:
    
Kerberos Authentication
-----------------------

The PostgreSQL connector supports Kerberos-based authentication with the
following configuration:

.. code-block:: none

    postgresql.authentication.type=KERBEROS
    kerberos.client.principal=example@example.com
    kerberos.client.keytab=etc/kerberos/example.keytab
    kerberos.config=etc/kerberos/krb5.conf

With this configuration the user ``example@example.com``, defined in the
principal property, is used to connect to the database, and the related Kerberos
service ticket is located in the ``example.keytab`` file.


.. _postgresql-kerberos-passthrough:

Kerberos Credential Passthrough
-------------------------------

The PostgreSQL connector can be configured to pass through Kerberos credentials,
received by Presto, to the PostgreSQL database.

Configure Kerberos and Presto, following the instructions in
:doc:`/security/credential-passthrough`.

Then configure the connector to pass through the credentials from the server to
the database in your catalog properties file and ensure the Kerberos client
configuration properties are in place on all nodes.

.. code-block:: properties

    postgresql.authentication.type=KERBEROS_PASS_THROUGH
    http.authentication.krb5.config=/etc/krb5.conf
    http-server.authentication.krb5.service-name=exampleServiceName
    http-server.authentication.krb5.keytab=/path/to/Keytab/File

Now any database access via Presto is subject to the data access restrictions
and permissions of the user supplied via Kerberos.

User Impersonation
------------------

PostgreSQL connector supports user impersonation. Please see
:doc:`/security/impersonation` for more details.

User impersonation can be turned with:

.. code-block:: none

    postgresql.impersonation.enabled=true

User impersonation in PostgreSQL connector is based on ``SET ROLE``.
For more details please visit: `www.postgresql.org/docs <https://www.postgresql.org/docs/11/sql-set-role.html>`_.


Table Statistics
----------------

PostgreSQL connector supports table and column statistics, as documented in
:doc:`/optimizer/statistics`. The statistics are collected by PostgreSQL and
retrieved by the connector. To collect statistics for a table, execute the
following statement in PostgreSQL.

.. code-block:: none

    ANALYZE table_schema.table_name;

Please refer to PostgreSQL documentation for additional ``ANALYZE`` options.

The table and column statistics can be viewed in Presto using
:doc:`/sql/show-stats` and are used for
:doc:`/optimizer/cost-based-optimizations`.

.. list-table:: Table Statistics Configuration Properties
  :widths: 15, 80, 5
  :header-rows: 1

  * - Property Name
    - Description
    - Default
  * - ``statistics.enabled``
    - Enables table and column statistics.
    - ``true``
  * - ``statistics.cache-ttl``
    - Duration for which table and column statistics are cached.
    - ``0s``
  * - ``statistics.cache-missing``
    - Cache the fact that table statistics are not available.
    - ``false``
